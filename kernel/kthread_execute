
kernel.elf:     file format elf32-littlearm
kernel.elf
architecture: arm, flags 0x00000112:
EXEC_P, HAS_SYMS, D_PAGED
start address 0x00010004

Program Header:
    LOAD off    0x00008000 vaddr 0x00010000 paddr 0x00010000 align 2**15
         filesz 0x000116f0 memsz 0x00011958 flags rwx
private flags = 5000202: [Version5 EABI] [soft-float ABI] [has entry point]

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .startup      00000018  00010000  00010000  00008000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .text         0000ff00  00010018  00010018  00008018  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       0000176c  0001ff18  0001ff18  00017f18  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .data         0000006c  00021684  00021684  00019684  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  4 .bss          00000268  000216f0  000216f0  000196f0  2**2
                  ALLOC
  5 .debug_info   000099c3  00000000  00000000  000196f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00002b92  00000000  00000000  000230b3  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_aranges 00000480  00000000  00000000  00025c48  2**3
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00002f5e  00000000  00000000  000260c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000289a  00000000  00000000  00029026  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .comment      00000011  00000000  00000000  0002b8c0  2**0
                  CONTENTS, READONLY
 11 .ARM.attributes 00000036  00000000  00000000  0002b8d1  2**0
                  CONTENTS, READONLY
 12 .debug_frame  000022a8  00000000  00000000  0002b908  2**2
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_loc    000001c1  00000000  00000000  0002dbb0  2**0
                  CONTENTS, READONLY, DEBUGGING
SYMBOL TABLE:
00010000 l    d  .startup	00000000 .startup
00010018 l    d  .text	00000000 .text
0001ff18 l    d  .rodata	00000000 .rodata
00021684 l    d  .data	00000000 .data
000216f0 l    d  .bss	00000000 .bss
00000000 l    d  .debug_info	00000000 .debug_info
00000000 l    d  .debug_abbrev	00000000 .debug_abbrev
00000000 l    d  .debug_aranges	00000000 .debug_aranges
00000000 l    d  .debug_line	00000000 .debug_line
00000000 l    d  .debug_str	00000000 .debug_str
00000000 l    d  .comment	00000000 .comment
00000000 l    d  .ARM.attributes	00000000 .ARM.attributes
00000000 l    d  .debug_frame	00000000 .debug_frame
00000000 l    d  .debug_loc	00000000 .debug_loc
00000000 l    df *ABS*	00000000 startup.o
00000000 l    df *ABS*	00000000 start.c
00000000 l    df *ABS*	00000000 uart.c
00000000 l    df *ABS*	00000000 argparse.c
00010734 l     F .text	00000034 atag_next_header
000108dc l     F .text	00000180 argparse_parse
00000000 l    df *ABS*	00000000 klibc.c
00021684 l     O .data	00000010 lower_case_digits
00021694 l     O .data	00000010 upper_case_digits
0002170c l       .bss	00000000 p.4241
000216a4 l     O .data	00000004 z1.4297
000216a8 l     O .data	00000004 z2.4298
000216ac l     O .data	00000004 z3.4299
000216b0 l     O .data	00000004 z4.4300
00021710 l       .bss	00000000 priority.4305
00000000 l    df *ABS*	00000000 interrupt.c
00021714 l       .bss	00000000 handlers
00021794 l       .bss	00000000 check_if_fiq
00000000 l    df *ABS*	00000000 hw_handlers.c
00000000 l    df *ABS*	00000000 process.c
0002181c l       .bss	00000000 GLOBAL_PID
00000000 l    df *ABS*	00000000 elf.c
00000000 l    df *ABS*	00000000 loader.c
00000000 l    df *ABS*	00000000 mem_alloc.c
00000000 l    df *ABS*	00000000 allocator.c
00000000 l    df *ABS*	00000000 tests.c
00000000 l    df *ABS*	00000000 mmap.c
00001000 l       *ABS*	00000000 stack_size
fffff000 l       *ABS*	00000000 stack_base
00000010 l       *ABS*	00000000 Mode_USR
00000011 l       *ABS*	00000000 Mode_FIQ
00000012 l       *ABS*	00000000 Mode_IRQ
00000013 l       *ABS*	00000000 Mode_SVC
00000016 l       *ABS*	00000000 Mode_MON
00000017 l       *ABS*	00000000 Mode_ABT
0000001b l       *ABS*	00000000 Mode_UND
0000001f l       *ABS*	00000000 Mode_SYS
00000000 l    df *ABS*	00000000 frame.c
00000000 l    df *ABS*	00000000 vm.c
000208d0 l     O .rodata	00000040 perm_mapping
000216c0 l     O .data	00000004 vm_current_vas
00000000 l    df *ABS*	00000000 timer.c
00000000 l    df *ABS*	00000000 bitvector.c
00000000 l    df *ABS*	00000000 priority_queue.c
00000000 l    df *ABS*	00000000 hash_map.c
00017e7c l     F .text	000000fc __hmap_is_prime
00017f78 l     F .text	00000074 __hmap_find_prime_greater_than
00017fec l     F .text	00000158 __hmap_rehash
00000000 l    df *ABS*	00000000 test_mem_alloc.c
00000000 l    df *ABS*	00000000 test_priority_queue.c
00000000 l    df *ABS*	00000000 test_hash_map.c
00000000 l    df *ABS*	00000000 test_vm.c
00000000 l    df *ABS*	00000000 open_table.c
00000000 l    df *ABS*	00000000 file.c
00000000 l    df *ABS*	00000000 test_fs.c
00000000 l    df *ABS*	00000000 scheduler.c
00021880 l       .bss	00000000 last_err
00021948 l       .bss	00000000 inactive_tasks
0002194c l       .bss	00000000 active_tasks
00021950 l       .bss	00000000 active_task
00021954 l       .bss	00000000 all_tasks_map
000216ec l     O .data	00000004 sched_tid
00000000 l    df *ABS*	00000000 array_list.c
00000000 l    df *ABS*	00000000 linked_list.c
00000000 l    df *ABS*	00000000 kthreads.c
00000000 l    df *ABS*	00000000 test_kthreads.c
00000000 l    df *ABS*	00000000 _udivsi3.o
0001fbc8 l       .text	00000000 .udivsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _divsi3.o
0001fce4 l       .text	00000000 .divsi3_skip_div0_test
00000000 l    df *ABS*	00000000 _dvmd_tls.o
00000000 l    df *ABS*	00000000 memcpy-stub.c
00000000 l    df *ABS*	00000000 
0001b83c g     F .text	000001f8 add_dir_entry
000125a8 g     F .text	00000064 disable_interrupt_save
00016068 g     F .text	000001a8 vm_set_mapping
0001276c g     F .text	0000001c undef_instruction_handler
00016928 g     F .text	00000060 set_load_value
00014778 g     F .text	00000078 mem_alloc
0001ea64 g     F .text	00000030 sched_post_message
00016b58 g     F .text	000000b4 set_periodic_mode
00014edc g     F .text	0000036c alloc_deallocate
0001d7f0 g     F .text	0000011c get_stats
0001dd04 g     F .text	00000014 __sched_deregister_timer_irq
0001d088 g     F .text	00000024 kremove_dir_entry
00012750 g     F .text	0000001c reset_handler
000123b0 g     F .text	000000ec register_interrupt_handler
00010c38 g     F .text	000000b0 os_memcmp
000135b4 g     F .text	0000014c execute_process
0001fad8 g     F .text	0000002c handler0_b
0001c014 g     F .text	00000170 kopen
0001cad8 g     F .text	000002f8 kcreate
00017668 g     F .text	000000a0 bv_unserialize
00021834 g     O .bss	00000004 vm_vas_free_list
0001dc94 g     F .text	0000005c run_fs_tests
0001d220 g     F .text	00000248 kcopy
00019850 g     F .text	00000188 test_hmap_3
0001e978 g     F .text	000000ec sched_set_niceness
00017e40 g     F .text	0000003c prq_free
00021844 g     O .bss	00000004 inode_bitmap
00015528 g     F .text	00000048 create_test
00016828 g     F .text	00000084 initialize_timers
00013ea0 g     F .text	00000220 read_section_header_table
00015ac4 g     F .text	00000084 vm_count_free_frames
00020a2c g     O .rodata	00000004 WORD_SIZE
0001fb58 g     F .text	00000030 test_kthr_1
000216d0 g     O .data	00000004 inode_size
00011ffc g     F .text	00000018 km_size
00012014 g     F .text	0000011c kmalloc_aligned
00016210 g     F .text	0000010c vm_free_mapping
0001468c g     F .text	000000ec load_file
00010ce8 g     F .text	00000080 os_strcmp
00018164 g     F .text	000000b8 hmap_create_fixed
00010530 g     F .text	00000084 print_word_bits
0001be40 g     F .text	000001d4 read_inode
000130b4 g     F .text	000001d0 print_process_state
0001af4c g     F .text	00000178 get_inum_from_direct_data_block
0001df04 g     F .text	00000170 __sched_create_task
0001ce48 g     F .text	00000240 kdelete_single
000100fc g     F .text	00000064 sd_transmit
0001fb88 g     F .text	00000040 run_kthr_tests
0002183c g     O .bss	00000004 vm_l2pt_free_list
00017ba8 g     F .text	000000f4 prq_remove
0001726c g     F .text	000000b4 bv_toggle
00016a98 g     F .text	0000006c set_32_bit_mode
0001da80 g     F .text	00000214 test_fs_2
0001546c g     F .text	000000bc run_tests
00012c94 g     F .text	00000054 init_all_processes
00012358 g     F .text	00000028 kthr_wait
0001eac8 g     F .text	0000007c arrl_create_fixed
0001a074 g     F .text	00000024 vm_test_early
0001e2c0 g     F .text	00000228 __sched_dispatch
0001bd8c g     F .text	000000b4 read_full_block
0001a488 g     F .text	000000f0 delete_from_opentable
0001355c g     F .text	00000058 free_PCB
000195d0 g     F .text	000000cc run_prq_tests
000216d8 g     O .data	00000004 inode_bitmap_loc
00010324 g     F .text	00000040 read_mmci
0001e58c g     F .text	0000010c sched_start_task
000167b0 g     F .text	00000078 vm_free_vas
000173d4 g     F .text	000000b8 bv_lower
0001e698 g     F .text	00000064 sched_remove_task
0001fe28 g     F .text	000000f0 memcpy
000216b8 g     O .data	00000004 nextBlock
000102e8 g     F .text	0000003c run_mmci
0001f658 g     F .text	00000058 kthread_create
00012130 g     F .text	00000028 kfree
00012634 g     F .text	00000024 restore_proc_status
00010d68 g     F .text	00000124 os_memcpy
0001a138 g     F .text	000000e8 fs_table_shutdown
000137dc g     F .text	000000a8 do_little_endian
000216dc g     O .data	00000004 data_bitmap_loc
00016dbc g     F .text	0000006c disable_timer_interrupt
00021820 g     O .bss	00000004 filePointer
00013360 g     F .text	00000088 print_PID
00017e24 g     F .text	0000001c prq_create
00018448 g     F .text	000001e8 hmap_remove
00021840 g     O .bss	00000004 root_inum
00010768 g     F .text	00000098 argparse_process
000105b4 g     F .text	000000c4 print_word_hex
00013700 g     F .text	00000030 sample_func
00012e00 g     F .text	00000078 next_free_slot_in_pcb_table
000169dc g     F .text	00000060 set_background_load_value
0001fbc8 g     F .text	000000f4 .hidden __udivsi3
0001f0b4 g     F .text	000000ec arrl_index_of
0001f4d0 g     F .text	00000068 llist_free
000101ec g     F .text	00000088 push_bytes
000216bc g     O .data	00000004 first_level_pt
000165bc g     F .text	00000050 vm_enable_vas
000138d0 g     F .text	000000cc isElf
00017cdc g     F .text	000000d0 prq_dequeue
000187c0 g     F .text	00000028 hmap_count
00011dd8 g     F .text	000000dc os_strspn
0001f718 g     F .text	0000004c kthread_execute
0001ecec g     F .text	000000a0 arrl_get
000104b0 g     F .text	00000050 print_uart0
00012e78 g     F .text	00000124 save_process_state
00016018 g     F .text	00000028 vm_pin
0001de0c g     F .text	0000004c sched_deregister_callback_handler
0001ded0 g     F .text	00000034 sched_create_task_from_process
0001f318 g     F .text	00000034 llist_get_data
00015248 g     F .text	000001d4 alloc_check
0001a098 g     F .text	0000004c run_vm_tests
0001783c g     F .text	0000016c __prq_shift_down
0001260c g     F .text	00000028 get_proc_status
00012f9c g     F .text	00000118 load_process_state
0001c914 g     F .text	00000080 kclose
0001f1c8 g     F .text	000000f4 __find_next
000192fc g     F .text	000002d4 test_prq_6
00010160 g     F .text	00000064 sd_receive
00018dc4 g     F .text	000002f0 test_prq_3
00012a98 g     F .text	0000004c prefetch_abort_handler
00021848 g     O .bss	00000004 data_block_table_cache
00016b04 g     F .text	00000054 get_current_timer_value
00015570 g     F .text	0000001c test1
0001c994 g     F .text	00000144 kseek
00011ce0 g     F .text	000000f8 os_strtok
00011614 g     F .text	00000378 os_memset
000159fc g     F .text	00000060 vm_get_free_frame
0002184c g     O .bss	00000004 INODE_TABLE_CACHE_SIZE
000155a8 g     F .text	000003b4 mmap
00012308 g     F .text	00000028 kthr_start
0001b648 g     F .text	000001f4 transmit_receive_bitmap
00013490 g     F .text	000000cc get_address_of_PCB
0001a0e4 g     F .text	00000054 fs_table_init
00012330 g     F .text	00000028 kthr_kill
00021850 g     O .bss	00000004 inode_table_temp
00015d1c g     F .text	00000044 vm_vtop
00014b1c g     F .text	0000017c __alloc_extend_heap
0001748c g     F .text	00000104 bv_firstFree
000148a0 g     F .text	00000094 init_heap
00010018 g     F .text	000000c8 init_sd
00021854 g     O .bss	00000004 MAX_BLOCKS
000216e0 g     O .data	00000004 start_inode_table_loc
00021858 g     O .bss	00000004 INDIRECT_BLOCK_TABLE_CACHE_SIZE
000132f0 g     F .text	00000070 print_pcb_table
000216f0 g     O .bss	00000004 table
0001f418 g     F .text	0000002c llist_enqueue
000175c8 g     F .text	000000a0 bv_serialize
00016f54 g     F .text	0000004c start_timer_interrupts
0001efdc g     F .text	000000d8 arrl_contains
0001eb44 g     F .text	000001a8 arrl_append
00010678 g     F .text	000000bc md
00014c98 g     F .text	00000244 alloc_allocate
0001a274 g     F .text	00000214 add_to_opentable
000133e8 g     F .text	000000a8 get_PCB
0001d468 g     F .text	00000388 kls
000101c4 g     F .text	00000028 clear
000179a8 g     F .text	0000001c prq_create_node
00016a3c g     F .text	0000005c clear_interrupt
00019248 g     F .text	000000b4 test_prq_5
0001bbe0 g     F .text	000001ac read_partial_block
0001cdd0 g     F .text	00000078 dir_empty
00013884 g     F .text	0000004c get_value
0001fcdc g     F .text	00000000 .hidden __aeabi_idiv
00017b04 g     F .text	000000a4 prq_enqueue
000168ac g     F .text	0000007c timer_start
00017a40 g     F .text	0000003c prq_count
000216f4 g     O .bss	00000004 pcb_table
00010274 g     F .text	00000074 pull_bytes
0001631c g     F .text	000002a0 vm_map_shared_memory
000140c0 g     F .text	00000314 parse_section_header_names
000216f8 g     O .bss	00000004 open_table_free_list
00010500 g     F .text	00000030 print_char_uart0
0001eaac g     F .text	0000001c arrl_create
0001f1a0 g     F .text	00000028 arrl_count
0001198c g     F .text	00000180 __strchrnul
0001156c g     F .text	00000050 os_snprintf
00015f24 g     F .text	000000f4 vm_free_page
00010e8c g     F .text	000002ec print_int
00012ce8 g     F .text	00000118 process_create
0001f9c0 g     F .text	0000007c handler1
00019708 g     F .text	00000148 test_hmap_2
00014974 g     F .text	0000003c deallocate
00010414 g     F .text	0000009c start2
00016c0c g     F .text	00000144 set_prescale
0001ae34 g     F .text	00000118 get_inode
00015a5c g     F .text	00000068 vm_release_frame
00012158 g     F .text	00000158 rand
000171cc g     F .text	000000a0 bv_get
0001fb04 g     F .text	00000054 handler0_a
000179c4 g     F .text	0000002c prq_free_node
0002185c g     O .bss	00000004 inode_table_cache
0001f494 g     F .text	0000003c llist_dequeue
00012554 g     F .text	00000054 disable_interrupt
00015b48 g     F .text	00000168 vm_init
00018630 g     F .text	00000190 hmap_get
0001f6dc g     F .text	0000003c kthread_free
00016d50 g     F .text	0000006c enable_timer_interrupt
00018818 g     F .text	000000a8 gen_rand
00011bf4 g     F .text	000000ec os_strlen
0001e6fc g     F .text	0000021c __sched_remove_task
00010bd8 g     F .text	0000001c panic
0001de58 g     F .text	00000044 sched_free
00010bf4 g     F .text	00000044 _assert_fail
00014494 g     F .text	000001f8 allocate_process_memory
00012380 g     F .text	00000030 init_fiqs
0001e158 g     F .text	00000054 sched_waittid
00021824 g     O .bss	00000004 startPointer
00021818 g     O .bss	00000004 interrupt_count
00013730 g     F .text	00000028 setup_process_vas
00021860 g     O .bss	00000004 NUM_DATA_BLOCK_TABLE_BLOCKS_TO_CACHE
00013ce4 g     F .text	000001bc read_program_header_table
0001f3b4 g     F .text	0000002c llist_set_data
0001fa3c g     F .text	0000009c handler0
0001f91c g     F .text	0000002c handler3
00021864 g     O .bss	00000004 MAX_MEMORY
0001f34c g     F .text	00000068 llist_get_node
00022958 g       .bss	00000000 stack_top
0001fe24  w    F .text	00000004 .hidden __aeabi_ldiv0
00017c9c g     F .text	00000040 prq_get
00010800 g     F .text	000000dc atag_print
0001ad58 g     F .text	000000dc get_indirect_block
00021828 g     O .bss	00000004 allocator
00021814 g     O .bss	00000001 IRQ
0001e918 g     F .text	00000040 sched_get_active_tid
00017320 g     F .text	000000b4 bv_set
0001a768 g     F .text	00000438 kfs_init
00016e94 g     F .text	0000006c enable_timer
00014a24 g     F .text	000000c4 alloc_create
00010a5c g     F .text	000000e8 string_to_unsigned_int
00012658 g     F .text	000000f8 init_vector_table
0001e074 g     F .text	000000e4 __sched_find_subtask
00013758 g     F .text	00000084 do_big_endian
0001f764 g     F .text	000000f0 kthread_save_state
000149fc g     F .text	00000028 mem_get_heap_size
00017590 g     F .text	00000038 bv_free
00014ae8 g     F .text	00000034 alloc_create_fixed
000149d4 g     F .text	00000028 mem_check
0001fbc8 g     F .text	00000000 .hidden __aeabi_uidiv
0001f538 g     F .text	00000030 llist_free_node
0001249c g     F .text	00000064 handle_irq_interrupt
00012ae4 g     F .text	000000d4 data_abort_handler
00011eb4 g     F .text	000000bc os_strcspn
0001ba34 g     F .text	000001ac get_block_address
0001821c g     F .text	0000022c hmap_put
0001fcdc g     F .text	00000128 .hidden __divsi3
000179f0 g     F .text	00000050 prq_peek
0001541c g     F .text	00000028 alloc_get_heap
0001e958 g     F .text	00000020 sched_last_err
00012500 g     F .text	00000054 enable_interrupt
00016e28 g     F .text	0000006c set_free_running_mode
00011b74 g     F .text	00000080 os_strncpy
00018b94 g     F .text	00000054 test_prq_1
000216b4 g     O .data	00000001 FIQ
00017dac g     F .text	00000078 prq_create_fixed
00017708 g     F .text	00000134 __prq_shift_up
0001ddbc g     F .text	00000050 sched_register_callback_handler
0001969c g     F .text	0000006c test_hmap_1
0001aba0 g     F .text	000001b8 kfs_shutdown
0001de9c g     F .text	00000034 sched_create_task_from_kthread
00011fe4 g     F .text	00000018 kmcheck
0001dcf0 g     F .text	00000014 __sched_register_timer_irq
0001660c g     F .text	000001a4 vm_new_vas
0001558c g     F .text	0000001c test2
00019c94 g     F .text	000003e0 test_vm_1
000216cc g     O .data	00000004 max_inodes
00017a7c g     F .text	00000088 __prq_amoritize
000199d8 g     F .text	00000238 test_hmap_4
000149b0 g     F .text	00000024 mem_get_allocator
0001e4e8 g     F .text	000000a4 __sched_emit_messages
00015cb0 g     F .text	0000006c vm_alloc_coarse_page_table
0001a5e8 g     F .text	00000180 kfs_format
00018144 g     F .text	00000020 hmap_create
00021868 g     O .bss	00000004 indirect_block_table_cache
00016fa0 g     F .text	0000022c make_vector
000216e8 g     O .data	00000004 start_data_blocks_loc
000190b4 g     F .text	00000194 test_prq_4
0002182c g     O .bss	00000004 buffer_size
00012c74 g     F .text	00000020 fiq_handler
00012bd0 g     F .text	000000a4 irq_handler
000187e8 g     F .text	00000030 hmap_free
0001c184 g     F .text	00000124 kread
00021830 g     O .bss	00000004 vm_free_list
0001b47c g     F .text	000001cc kfind_dir
0002186c g     O .bss	00000004 NUM_INODE_TABLE_BLOCKS_TO_CACHE
00013284 g     F .text	0000006c process_destroy
000216e4 g     O .data	00000004 start_indirect_blocks_table_loc
00015da4 g     F .text	00000024 vm_get_current_vas
0001b0c4 g     F .text	000001f8 get_inum_from_indirect_data_block
0001d0ac g     F .text	00000174 kdelete
000216b5 g     O .data	00000001 ALL
00020de8 g     O .rodata	00000004 SUPERBLOCK
00015960 g     F .text	0000009c vm_build_free_frame_list
00021870 g     O .bss	00000004 data_block_bitmap
0001fcbc g     F .text	00000020 .hidden __aeabi_uidivmod
0001f3e0 g     F .text	00000038 llist_create_node
00012788 g     F .text	00000310 software_interrupt_handler
0001f948 g     F .text	00000078 handler2
0001039c g     F .text	00000024 uart_handler
000216d4 g     O .data	00000004 max_data_blocks
00015eb4 g     F .text	00000070 vm_allocate_pages
0001a220 g     F .text	00000054 get_descriptor
00016040 g     F .text	00000028 vm_unpin
00018b44 g     F .text	00000050 run_mem_alloc_tests
0001f444 g     F .text	00000050 llist_remove_at
000216c8 g     O .data	00000004 sd_card_capacity
0001f2f0 g     F .text	00000028 llist_count
00011fb0 g     F .text	00000034 kmalloc
00021874 g     O .bss	00000004 NUM_INDIRECT_BLOCK_TABLE_BLOCKS_TO_CACHE
00021878 g     O .bss	00000004 FS
000143d4 g     F .text	000000c0 det_proc_size
0001f568 g     F .text	000000f0 llist_insert
0001e1ac g     F .text	00000114 __sched_print_queues
00011b0c g     F .text	00000068 os_strcpy
000103c0 g     F .text	00000054 start
00015dc8 g     F .text	00000018 vm_use_kernel_vas
000216fc g     O .bss	00000010 timer_pointers
0001f6b0 g     F .text	0000002c kthread_start
00016f00 g     F .text	00000054 print_control_status
00014934 g     F .text	00000040 allocate
0001a578 g     F .text	00000070 file_is_open
0001fe24  w    F .text	00000004 .hidden __aeabi_idiv0
00010004 g       .startup	00000000 _Reset
0002187c g     O .bss	00000004 DATA_BLOCK_TABLE_CACHE_SIZE
00019c10 g     F .text	00000084 run_hmap_tests
00016988 g     F .text	00000054 get_timer_control_value
0001dd18 g     F .text	00000014 __sched_pause_timer_irq
0001dd40 g     F .text	0000007c sched_init
000115bc g     F .text	00000058 os_printf
00018be8 g     F .text	000001dc test_prq_2
00015444 g     F .text	00000028 alloc_get_heap_size
00011f70 g     F .text	00000040 abs
0001f2bc g     F .text	00000034 llist_create
0001b2bc g     F .text	000001c0 kfind_inode
0001399c g     F .text	00000348 read_elf_header
0001c2a8 g     F .text	0000066c kwrite
00011178 g     F .text	000003f4 os_vsnprintf
00015de0 g     F .text	000000d4 vm_allocate_page
0001f854 g     F .text	000000c8 kthread_load_state
000100e0 g     F .text	0000001c sd_capacity
0001ea94 g     F .text	00000018 sched_yield
00021838 g     O .bss	00000004 vm_l1pt_free_list
0001fe04 g     F .text	00000020 .hidden __aeabi_idivmod
000147f0 g     F .text	000000b0 __mem_extend_heap
00010364 g     F .text	00000038 status
0001d90c g     F .text	00000174 test_fs_1
000188c0 g     F .text	00000284 test_mem_alloc_1
0001dd2c g     F .text	00000014 __sched_resume_timer_irq
00015d60 g     F .text	00000044 vm_ptov
00010b44 g     F .text	00000094 hex_value_of_character
000122b0 g     F .text	00000058 kthr_create
00012bb8 g     F .text	00000018 reserved_handler
000216c4 g     O .data	00000004 INODES_PER_BLOCK
0001ed8c g     F .text	00000250 arrl_remove



Disassembly of section .startup:

00010000 <_Reset-0x4>:
   10000:	eaffffff 	b	10004 <_Reset>

00010004 <_Reset>:
   10004:	e59fd008 	ldr	sp, [pc, #8]	; 10014 <_Reset+0x10>
   10008:	e1a00002 	mov	r0, r2
   1000c:	eb0000eb 	bl	103c0 <start>
   10010:	e320f003 	wfi
   10014:	00022958 	andeq	r2, r2, r8, asr r9

Disassembly of section .text:

00010018 <init_sd>:
   10018:	e92d4800 	push	{fp, lr}
   1001c:	e28db004 	add	fp, sp, #4
   10020:	e24dd008 	sub	sp, sp, #8
   10024:	f10800c0 	cpsie	if
   10028:	e3a03000 	mov	r3, #0
   1002c:	e50b3008 	str	r3, [fp, #-8]
   10030:	e3a0000c 	mov	r0, #12
   10034:	e59f108c 	ldr	r1, [pc, #140]	; 100c8 <init_sd+0xb0>
   10038:	eb0000aa 	bl	102e8 <run_mmci>
   1003c:	e3a00008 	mov	r0, #8
   10040:	e3a0107b 	mov	r1, #123	; 0x7b
   10044:	eb0000a7 	bl	102e8 <run_mmci>
   10048:	e3a0000c 	mov	r0, #12
   1004c:	e59f1078 	ldr	r1, [pc, #120]	; 100cc <init_sd+0xb4>
   10050:	eb0000a4 	bl	102e8 <run_mmci>
   10054:	e3a0000c 	mov	r0, #12
   10058:	e59f1070 	ldr	r1, [pc, #112]	; 100d0 <init_sd+0xb8>
   1005c:	eb0000a1 	bl	102e8 <run_mmci>
   10060:	e3a0000c 	mov	r0, #12
   10064:	e59f1068 	ldr	r1, [pc, #104]	; 100d4 <init_sd+0xbc>
   10068:	eb00009e 	bl	102e8 <run_mmci>
   1006c:	e3a00014 	mov	r0, #20
   10070:	eb0000ab 	bl	10324 <read_mmci>
   10074:	e1a03000 	mov	r3, r0
   10078:	e1a03823 	lsr	r3, r3, #16
   1007c:	e1a03803 	lsl	r3, r3, #16
   10080:	e50b3008 	str	r3, [fp, #-8]
   10084:	e51b3008 	ldr	r3, [fp, #-8]
   10088:	e3a00008 	mov	r0, #8
   1008c:	e1a01003 	mov	r1, r3
   10090:	eb000094 	bl	102e8 <run_mmci>
   10094:	e3a0000c 	mov	r0, #12
   10098:	e59f1038 	ldr	r1, [pc, #56]	; 100d8 <init_sd+0xc0>
   1009c:	eb000091 	bl	102e8 <run_mmci>
   100a0:	e3a00028 	mov	r0, #40	; 0x28
   100a4:	e3a01c02 	mov	r1, #512	; 0x200
   100a8:	eb00008e 	bl	102e8 <run_mmci>
   100ac:	e59f0028 	ldr	r0, [pc, #40]	; 100dc <init_sd+0xc4>
   100b0:	eb000541 	bl	115bc <os_printf>
   100b4:	eb0000aa 	bl	10364 <status>
   100b8:	e1a03000 	mov	r3, r0
   100bc:	e1a00003 	mov	r0, r3
   100c0:	e24bd004 	sub	sp, fp, #4
   100c4:	e8bd8800 	pop	{fp, pc}
   100c8:	00000437 	andeq	r0, r0, r7, lsr r4
   100cc:	00000429 	andeq	r0, r0, r9, lsr #8
   100d0:	000004c2 	andeq	r0, r0, r2, asr #9
   100d4:	00000443 	andeq	r0, r0, r3, asr #8
   100d8:	00000447 	andeq	r0, r0, r7, asr #8
   100dc:	0001ff18 	andeq	pc, r1, r8, lsl pc	; <UNPREDICTABLE>

000100e0 <sd_capacity>:
   100e0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   100e4:	e28db000 	add	fp, sp, #0
   100e8:	e3a03702 	mov	r3, #524288	; 0x80000
   100ec:	e1a00003 	mov	r0, r3
   100f0:	e24bd000 	sub	sp, fp, #0
   100f4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   100f8:	e12fff1e 	bx	lr

000100fc <sd_transmit>:
   100fc:	e92d4800 	push	{fp, lr}
   10100:	e28db004 	add	fp, sp, #4
   10104:	e24dd008 	sub	sp, sp, #8
   10108:	e50b0008 	str	r0, [fp, #-8]
   1010c:	e50b100c 	str	r1, [fp, #-12]
   10110:	e3a00008 	mov	r0, #8
   10114:	e3a01c02 	mov	r1, #512	; 0x200
   10118:	eb000072 	bl	102e8 <run_mmci>
   1011c:	e3a0000c 	mov	r0, #12
   10120:	e3a01e45 	mov	r1, #1104	; 0x450
   10124:	eb00006f 	bl	102e8 <run_mmci>
   10128:	e3a00008 	mov	r0, #8
   1012c:	e51b100c 	ldr	r1, [fp, #-12]
   10130:	eb00006c 	bl	102e8 <run_mmci>
   10134:	e3a0000c 	mov	r0, #12
   10138:	e59f101c 	ldr	r1, [pc, #28]	; 1015c <sd_transmit+0x60>
   1013c:	eb000069 	bl	102e8 <run_mmci>
   10140:	e51b0008 	ldr	r0, [fp, #-8]
   10144:	eb000028 	bl	101ec <push_bytes>
   10148:	eb000085 	bl	10364 <status>
   1014c:	e1a03000 	mov	r3, r0
   10150:	e1a00003 	mov	r0, r3
   10154:	e24bd004 	sub	sp, fp, #4
   10158:	e8bd8800 	pop	{fp, pc}
   1015c:	00000458 	andeq	r0, r0, r8, asr r4

00010160 <sd_receive>:
   10160:	e92d4800 	push	{fp, lr}
   10164:	e28db004 	add	fp, sp, #4
   10168:	e24dd008 	sub	sp, sp, #8
   1016c:	e50b0008 	str	r0, [fp, #-8]
   10170:	e50b100c 	str	r1, [fp, #-12]
   10174:	e3a0002c 	mov	r0, #44	; 0x2c
   10178:	e3a01090 	mov	r1, #144	; 0x90
   1017c:	eb000059 	bl	102e8 <run_mmci>
   10180:	e3a0002c 	mov	r0, #44	; 0x2c
   10184:	e3a01093 	mov	r1, #147	; 0x93
   10188:	eb000056 	bl	102e8 <run_mmci>
   1018c:	e3a00008 	mov	r0, #8
   10190:	e51b100c 	ldr	r1, [fp, #-12]
   10194:	eb000053 	bl	102e8 <run_mmci>
   10198:	e3a0000c 	mov	r0, #12
   1019c:	e59f101c 	ldr	r1, [pc, #28]	; 101c0 <sd_receive+0x60>
   101a0:	eb000050 	bl	102e8 <run_mmci>
   101a4:	e51b0008 	ldr	r0, [fp, #-8]
   101a8:	eb000031 	bl	10274 <pull_bytes>
   101ac:	eb00006c 	bl	10364 <status>
   101b0:	e1a03000 	mov	r3, r0
   101b4:	e1a00003 	mov	r0, r3
   101b8:	e24bd004 	sub	sp, fp, #4
   101bc:	e8bd8800 	pop	{fp, pc}
   101c0:	00000451 	andeq	r0, r0, r1, asr r4

000101c4 <clear>:
   101c4:	e92d4800 	push	{fp, lr}
   101c8:	e28db004 	add	fp, sp, #4
   101cc:	e3a00038 	mov	r0, #56	; 0x38
   101d0:	e59f1010 	ldr	r1, [pc, #16]	; 101e8 <clear+0x24>
   101d4:	eb000043 	bl	102e8 <run_mmci>
   101d8:	eb000061 	bl	10364 <status>
   101dc:	e1a03000 	mov	r3, r0
   101e0:	e1a00003 	mov	r0, r3
   101e4:	e8bd8800 	pop	{fp, pc}
   101e8:	000002ff 	strdeq	r0, [r0], -pc	; <UNPREDICTABLE>

000101ec <push_bytes>:
   101ec:	e92d4800 	push	{fp, lr}
   101f0:	e28db004 	add	fp, sp, #4
   101f4:	e24dd010 	sub	sp, sp, #16
   101f8:	e50b0010 	str	r0, [fp, #-16]
   101fc:	e3a0002c 	mov	r0, #44	; 0x2c
   10200:	e3a01090 	mov	r1, #144	; 0x90
   10204:	eb000037 	bl	102e8 <run_mmci>
   10208:	e3a0002c 	mov	r0, #44	; 0x2c
   1020c:	e3a01091 	mov	r1, #145	; 0x91
   10210:	eb000034 	bl	102e8 <run_mmci>
   10214:	e3a03000 	mov	r3, #0
   10218:	e50b3008 	str	r3, [fp, #-8]
   1021c:	ea00000a 	b	1024c <push_bytes+0x60>
   10220:	e51b3008 	ldr	r3, [fp, #-8]
   10224:	e1a03103 	lsl	r3, r3, #2
   10228:	e51b2010 	ldr	r2, [fp, #-16]
   1022c:	e0823003 	add	r3, r2, r3
   10230:	e5933000 	ldr	r3, [r3]
   10234:	e3a00080 	mov	r0, #128	; 0x80
   10238:	e1a01003 	mov	r1, r3
   1023c:	eb000029 	bl	102e8 <run_mmci>
   10240:	e51b3008 	ldr	r3, [fp, #-8]
   10244:	e2833001 	add	r3, r3, #1
   10248:	e50b3008 	str	r3, [fp, #-8]
   1024c:	e3a00048 	mov	r0, #72	; 0x48
   10250:	eb000033 	bl	10324 <read_mmci>
   10254:	e1a03000 	mov	r3, r0
   10258:	e3530000 	cmp	r3, #0
   1025c:	1affffef 	bne	10220 <push_bytes+0x34>
   10260:	eb00003f 	bl	10364 <status>
   10264:	e1a03000 	mov	r3, r0
   10268:	e1a00003 	mov	r0, r3
   1026c:	e24bd004 	sub	sp, fp, #4
   10270:	e8bd8800 	pop	{fp, pc}

00010274 <pull_bytes>:
   10274:	e92d4810 	push	{r4, fp, lr}
   10278:	e28db008 	add	fp, sp, #8
   1027c:	e24dd014 	sub	sp, sp, #20
   10280:	e50b0018 	str	r0, [fp, #-24]
   10284:	e3a03000 	mov	r3, #0
   10288:	e50b3010 	str	r3, [fp, #-16]
   1028c:	ea00000a 	b	102bc <pull_bytes+0x48>
   10290:	e51b3010 	ldr	r3, [fp, #-16]
   10294:	e1a03103 	lsl	r3, r3, #2
   10298:	e51b2018 	ldr	r2, [fp, #-24]
   1029c:	e0824003 	add	r4, r2, r3
   102a0:	e3a00080 	mov	r0, #128	; 0x80
   102a4:	eb00001e 	bl	10324 <read_mmci>
   102a8:	e1a03000 	mov	r3, r0
   102ac:	e5843000 	str	r3, [r4]
   102b0:	e51b3010 	ldr	r3, [fp, #-16]
   102b4:	e2833001 	add	r3, r3, #1
   102b8:	e50b3010 	str	r3, [fp, #-16]
   102bc:	e3a00034 	mov	r0, #52	; 0x34
   102c0:	eb000017 	bl	10324 <read_mmci>
   102c4:	e1a03000 	mov	r3, r0
   102c8:	e2033602 	and	r3, r3, #2097152	; 0x200000
   102cc:	e3530000 	cmp	r3, #0
   102d0:	1affffee 	bne	10290 <pull_bytes+0x1c>
   102d4:	eb000022 	bl	10364 <status>
   102d8:	e1a03000 	mov	r3, r0
   102dc:	e1a00003 	mov	r0, r3
   102e0:	e24bd008 	sub	sp, fp, #8
   102e4:	e8bd8810 	pop	{r4, fp, pc}

000102e8 <run_mmci>:
   102e8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   102ec:	e28db000 	add	fp, sp, #0
   102f0:	e24dd014 	sub	sp, sp, #20
   102f4:	e50b0010 	str	r0, [fp, #-16]
   102f8:	e50b1014 	str	r1, [fp, #-20]
   102fc:	e51b3010 	ldr	r3, [fp, #-16]
   10300:	e2833201 	add	r3, r3, #268435456	; 0x10000000
   10304:	e2833a05 	add	r3, r3, #20480	; 0x5000
   10308:	e50b3008 	str	r3, [fp, #-8]
   1030c:	e51b3014 	ldr	r3, [fp, #-20]
   10310:	e51b2008 	ldr	r2, [fp, #-8]
   10314:	e5823000 	str	r3, [r2]
   10318:	e24bd000 	sub	sp, fp, #0
   1031c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10320:	e12fff1e 	bx	lr

00010324 <read_mmci>:
   10324:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10328:	e28db000 	add	fp, sp, #0
   1032c:	e24dd014 	sub	sp, sp, #20
   10330:	e50b0010 	str	r0, [fp, #-16]
   10334:	e51b3010 	ldr	r3, [fp, #-16]
   10338:	e2833201 	add	r3, r3, #268435456	; 0x10000000
   1033c:	e2833a05 	add	r3, r3, #20480	; 0x5000
   10340:	e50b3008 	str	r3, [fp, #-8]
   10344:	e51b3008 	ldr	r3, [fp, #-8]
   10348:	e5933000 	ldr	r3, [r3]
   1034c:	e50b300c 	str	r3, [fp, #-12]
   10350:	e51b300c 	ldr	r3, [fp, #-12]
   10354:	e1a00003 	mov	r0, r3
   10358:	e24bd000 	sub	sp, fp, #0
   1035c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10360:	e12fff1e 	bx	lr

00010364 <status>:
   10364:	e92d4800 	push	{fp, lr}
   10368:	e28db004 	add	fp, sp, #4
   1036c:	e24dd008 	sub	sp, sp, #8
   10370:	e3a00034 	mov	r0, #52	; 0x34
   10374:	ebffffea 	bl	10324 <read_mmci>
   10378:	e50b0008 	str	r0, [fp, #-8]
   1037c:	e51b3008 	ldr	r3, [fp, #-8]
   10380:	e203303f 	and	r3, r3, #63	; 0x3f
   10384:	e50b300c 	str	r3, [fp, #-12]
   10388:	e51b300c 	ldr	r3, [fp, #-12]
   1038c:	e2633000 	rsb	r3, r3, #0
   10390:	e1a00003 	mov	r0, r3
   10394:	e24bd004 	sub	sp, fp, #4
   10398:	e8bd8800 	pop	{fp, pc}

0001039c <uart_handler>:
   1039c:	e92d4800 	push	{fp, lr}
   103a0:	e28db004 	add	fp, sp, #4
   103a4:	e24dd008 	sub	sp, sp, #8
   103a8:	e50b0008 	str	r0, [fp, #-8]
   103ac:	e59f0008 	ldr	r0, [pc, #8]	; 103bc <uart_handler+0x20>
   103b0:	eb00003e 	bl	104b0 <print_uart0>
   103b4:	e24bd004 	sub	sp, fp, #4
   103b8:	e8bd8800 	pop	{fp, pc}
   103bc:	0001ff38 	andeq	pc, r1, r8, lsr pc	; <UNPREDICTABLE>

000103c0 <start>:
   103c0:	e92d4800 	push	{fp, lr}
   103c4:	e28db004 	add	fp, sp, #4
   103c8:	e24dd008 	sub	sp, sp, #8
   103cc:	e50b0008 	str	r0, [fp, #-8]
   103d0:	e59f0030 	ldr	r0, [pc, #48]	; 10408 <start+0x48>
   103d4:	eb000035 	bl	104b0 <print_uart0>
   103d8:	e51b3008 	ldr	r3, [fp, #-8]
   103dc:	e5933000 	ldr	r3, [r3]
   103e0:	e59f0024 	ldr	r0, [pc, #36]	; 1040c <start+0x4c>
   103e4:	e1a01003 	mov	r1, r3
   103e8:	eb000473 	bl	115bc <os_printf>
   103ec:	eb0015d5 	bl	15b48 <vm_init>
   103f0:	e59f0018 	ldr	r0, [pc, #24]	; 10410 <start+0x50>
   103f4:	eb000470 	bl	115bc <os_printf>
   103f8:	e51b0008 	ldr	r0, [fp, #-8]
   103fc:	eb001469 	bl	155a8 <mmap>
   10400:	e24bd004 	sub	sp, fp, #4
   10404:	e8bd8800 	pop	{fp, pc}
   10408:	0001ff40 	andeq	pc, r1, r0, asr #30
   1040c:	0001ff54 	andeq	pc, r1, r4, asr pc	; <UNPREDICTABLE>
   10410:	0001ff58 	andeq	pc, r1, r8, asr pc	; <UNPREDICTABLE>

00010414 <start2>:
   10414:	e92d4800 	push	{fp, lr}
   10418:	e28db004 	add	fp, sp, #4
   1041c:	e24dd008 	sub	sp, sp, #8
   10420:	e50b0008 	str	r0, [fp, #-8]
   10424:	eb00088b 	bl	12658 <init_vector_table>
   10428:	eb00111c 	bl	148a0 <init_heap>
   1042c:	e59f006c 	ldr	r0, [pc, #108]	; 104a0 <start2+0x8c>
   10430:	eb00001e 	bl	104b0 <print_uart0>
   10434:	e59f0068 	ldr	r0, [pc, #104]	; 104a4 <start2+0x90>
   10438:	eb00001c 	bl	104b0 <print_uart0>
   1043c:	e51b3008 	ldr	r3, [fp, #-8]
   10440:	e5933000 	ldr	r3, [r3]
   10444:	e59f005c 	ldr	r0, [pc, #92]	; 104a8 <start2+0x94>
   10448:	e1a01003 	mov	r1, r3
   1044c:	eb00045a 	bl	115bc <os_printf>
   10450:	eb00363a 	bl	1dd40 <sched_init>
   10454:	eb00270f 	bl	1a098 <run_vm_tests>
   10458:	eb001599 	bl	15ac4 <vm_count_free_frames>
   1045c:	e1a03000 	mov	r3, r0
   10460:	e59f0044 	ldr	r0, [pc, #68]	; 104ac <start2+0x98>
   10464:	e1a01003 	mov	r1, r3
   10468:	eb000453 	bl	115bc <os_printf>
   1046c:	eb001594 	bl	15ac4 <vm_count_free_frames>
   10470:	e1a03000 	mov	r3, r0
   10474:	e59f0030 	ldr	r0, [pc, #48]	; 104ac <start2+0x98>
   10478:	e1a01003 	mov	r1, r3
   1047c:	eb00044e 	bl	115bc <os_printf>
   10480:	eb002452 	bl	195d0 <run_prq_tests>
   10484:	eb0025e1 	bl	19c10 <run_hmap_tests>
   10488:	eb003dbe 	bl	1fb88 <run_kthr_tests>
   1048c:	e3a00000 	mov	r0, #0
   10490:	e3a01000 	mov	r1, #0
   10494:	eb0028b3 	bl	1a768 <kfs_init>
   10498:	eb0035fd 	bl	1dc94 <run_fs_tests>
   1049c:	eafffffe 	b	1049c <start2+0x88>
   104a0:	0001ff78 	andeq	pc, r1, r8, ror pc	; <UNPREDICTABLE>
   104a4:	0001ff88 	andeq	pc, r1, r8, lsl #31
   104a8:	0001ff94 	muleq	r1, r4, pc	; <UNPREDICTABLE>
   104ac:	0001ffa4 	andeq	pc, r1, r4, lsr #31

000104b0 <print_uart0>:
   104b0:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   104b4:	e28db000 	add	fp, sp, #0
   104b8:	e24dd00c 	sub	sp, sp, #12
   104bc:	e50b0008 	str	r0, [fp, #-8]
   104c0:	ea000006 	b	104e0 <print_uart0+0x30>
   104c4:	e59f3030 	ldr	r3, [pc, #48]	; 104fc <print_uart0+0x4c>
   104c8:	e51b2008 	ldr	r2, [fp, #-8]
   104cc:	e5d22000 	ldrb	r2, [r2]
   104d0:	e5832000 	str	r2, [r3]
   104d4:	e51b3008 	ldr	r3, [fp, #-8]
   104d8:	e2833001 	add	r3, r3, #1
   104dc:	e50b3008 	str	r3, [fp, #-8]
   104e0:	e51b3008 	ldr	r3, [fp, #-8]
   104e4:	e5d33000 	ldrb	r3, [r3]
   104e8:	e3530000 	cmp	r3, #0
   104ec:	1afffff4 	bne	104c4 <print_uart0+0x14>
   104f0:	e24bd000 	sub	sp, fp, #0
   104f4:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   104f8:	e12fff1e 	bx	lr
   104fc:	101f1000 	andsne	r1, pc, r0

00010500 <print_char_uart0>:
   10500:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10504:	e28db000 	add	fp, sp, #0
   10508:	e24dd00c 	sub	sp, sp, #12
   1050c:	e1a03000 	mov	r3, r0
   10510:	e54b3005 	strb	r3, [fp, #-5]
   10514:	e59f3010 	ldr	r3, [pc, #16]	; 1052c <print_char_uart0+0x2c>
   10518:	e55b2005 	ldrb	r2, [fp, #-5]
   1051c:	e5832000 	str	r2, [r3]
   10520:	e24bd000 	sub	sp, fp, #0
   10524:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10528:	e12fff1e 	bx	lr
   1052c:	101f1000 	andsne	r1, pc, r0

00010530 <print_word_bits>:
   10530:	e92d4800 	push	{fp, lr}
   10534:	e28db004 	add	fp, sp, #4
   10538:	e24dd010 	sub	sp, sp, #16
   1053c:	e50b0010 	str	r0, [fp, #-16]
   10540:	e3a0301f 	mov	r3, #31
   10544:	e50b3008 	str	r3, [fp, #-8]
   10548:	ea00000f 	b	1058c <print_word_bits+0x5c>
   1054c:	e51b3010 	ldr	r3, [fp, #-16]
   10550:	e5932000 	ldr	r2, [r3]
   10554:	e3a01001 	mov	r1, #1
   10558:	e51b3008 	ldr	r3, [fp, #-8]
   1055c:	e1a03311 	lsl	r3, r1, r3
   10560:	e0023003 	and	r3, r2, r3
   10564:	e3530000 	cmp	r3, #0
   10568:	0a000002 	beq	10578 <print_word_bits+0x48>
   1056c:	e59f0034 	ldr	r0, [pc, #52]	; 105a8 <print_word_bits+0x78>
   10570:	ebffffce 	bl	104b0 <print_uart0>
   10574:	ea000001 	b	10580 <print_word_bits+0x50>
   10578:	e59f002c 	ldr	r0, [pc, #44]	; 105ac <print_word_bits+0x7c>
   1057c:	ebffffcb 	bl	104b0 <print_uart0>
   10580:	e51b3008 	ldr	r3, [fp, #-8]
   10584:	e2433001 	sub	r3, r3, #1
   10588:	e50b3008 	str	r3, [fp, #-8]
   1058c:	e51b3008 	ldr	r3, [fp, #-8]
   10590:	e3530000 	cmp	r3, #0
   10594:	aaffffec 	bge	1054c <print_word_bits+0x1c>
   10598:	e59f0010 	ldr	r0, [pc, #16]	; 105b0 <print_word_bits+0x80>
   1059c:	ebffffc3 	bl	104b0 <print_uart0>
   105a0:	e24bd004 	sub	sp, fp, #4
   105a4:	e8bd8800 	pop	{fp, pc}
   105a8:	0001ffc0 	andeq	pc, r1, r0, asr #31
   105ac:	0001ffc4 	andeq	pc, r1, r4, asr #31
   105b0:	0001ffc8 	andeq	pc, r1, r8, asr #31

000105b4 <print_word_hex>:
   105b4:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   105b8:	e28db000 	add	fp, sp, #0
   105bc:	e24dd014 	sub	sp, sp, #20
   105c0:	e50b0010 	str	r0, [fp, #-16]
   105c4:	e3a03007 	mov	r3, #7
   105c8:	e50b3008 	str	r3, [fp, #-8]
   105cc:	ea000022 	b	1065c <print_word_hex+0xa8>
   105d0:	e51b3010 	ldr	r3, [fp, #-16]
   105d4:	e5932000 	ldr	r2, [r3]
   105d8:	e51b3008 	ldr	r3, [fp, #-8]
   105dc:	e1a03103 	lsl	r3, r3, #2
   105e0:	e3a0100f 	mov	r1, #15
   105e4:	e1a03311 	lsl	r3, r1, r3
   105e8:	e0023003 	and	r3, r2, r3
   105ec:	e50b300c 	str	r3, [fp, #-12]
   105f0:	e51b3008 	ldr	r3, [fp, #-8]
   105f4:	e1a03103 	lsl	r3, r3, #2
   105f8:	e51b200c 	ldr	r2, [fp, #-12]
   105fc:	e1a03332 	lsr	r3, r2, r3
   10600:	e50b300c 	str	r3, [fp, #-12]
   10604:	e51b300c 	ldr	r3, [fp, #-12]
   10608:	e3530009 	cmp	r3, #9
   1060c:	8a000004 	bhi	10624 <print_word_hex+0x70>
   10610:	e59f305c 	ldr	r3, [pc, #92]	; 10674 <print_word_hex+0xc0>
   10614:	e51b200c 	ldr	r2, [fp, #-12]
   10618:	e2822030 	add	r2, r2, #48	; 0x30
   1061c:	e5832000 	str	r2, [r3]
   10620:	ea00000a 	b	10650 <print_word_hex+0x9c>
   10624:	e51b300c 	ldr	r3, [fp, #-12]
   10628:	e353000f 	cmp	r3, #15
   1062c:	8a000004 	bhi	10644 <print_word_hex+0x90>
   10630:	e59f303c 	ldr	r3, [pc, #60]	; 10674 <print_word_hex+0xc0>
   10634:	e51b200c 	ldr	r2, [fp, #-12]
   10638:	e2822057 	add	r2, r2, #87	; 0x57
   1063c:	e5832000 	str	r2, [r3]
   10640:	ea000002 	b	10650 <print_word_hex+0x9c>
   10644:	e59f3028 	ldr	r3, [pc, #40]	; 10674 <print_word_hex+0xc0>
   10648:	e3a0203f 	mov	r2, #63	; 0x3f
   1064c:	e5832000 	str	r2, [r3]
   10650:	e51b3008 	ldr	r3, [fp, #-8]
   10654:	e2433001 	sub	r3, r3, #1
   10658:	e50b3008 	str	r3, [fp, #-8]
   1065c:	e51b3008 	ldr	r3, [fp, #-8]
   10660:	e3530000 	cmp	r3, #0
   10664:	aaffffd9 	bge	105d0 <print_word_hex+0x1c>
   10668:	e24bd000 	sub	sp, fp, #0
   1066c:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10670:	e12fff1e 	bx	lr
   10674:	101f1000 	andsne	r1, pc, r0

00010678 <md>:
   10678:	e92d4800 	push	{fp, lr}
   1067c:	e28db004 	add	fp, sp, #4
   10680:	e24dd018 	sub	sp, sp, #24
   10684:	e50b0018 	str	r0, [fp, #-24]
   10688:	e51b3018 	ldr	r3, [fp, #-24]
   1068c:	e50b3010 	str	r3, [fp, #-16]
   10690:	e3a03000 	mov	r3, #0
   10694:	e50b3008 	str	r3, [fp, #-8]
   10698:	ea00001c 	b	10710 <md+0x98>
   1069c:	e59f0080 	ldr	r0, [pc, #128]	; 10724 <md+0xac>
   106a0:	ebffff82 	bl	104b0 <print_uart0>
   106a4:	e24b3010 	sub	r3, fp, #16
   106a8:	e1a00003 	mov	r0, r3
   106ac:	ebffffc0 	bl	105b4 <print_word_hex>
   106b0:	e59f0070 	ldr	r0, [pc, #112]	; 10728 <md+0xb0>
   106b4:	ebffff7d 	bl	104b0 <print_uart0>
   106b8:	e3a03000 	mov	r3, #0
   106bc:	e50b300c 	str	r3, [fp, #-12]
   106c0:	ea00000a 	b	106f0 <md+0x78>
   106c4:	e51b3010 	ldr	r3, [fp, #-16]
   106c8:	e1a00003 	mov	r0, r3
   106cc:	ebffffb8 	bl	105b4 <print_word_hex>
   106d0:	e59f0054 	ldr	r0, [pc, #84]	; 1072c <md+0xb4>
   106d4:	ebffff75 	bl	104b0 <print_uart0>
   106d8:	e51b3010 	ldr	r3, [fp, #-16]
   106dc:	e2833004 	add	r3, r3, #4
   106e0:	e50b3010 	str	r3, [fp, #-16]
   106e4:	e51b300c 	ldr	r3, [fp, #-12]
   106e8:	e2833001 	add	r3, r3, #1
   106ec:	e50b300c 	str	r3, [fp, #-12]
   106f0:	e51b300c 	ldr	r3, [fp, #-12]
   106f4:	e3530002 	cmp	r3, #2
   106f8:	dafffff1 	ble	106c4 <md+0x4c>
   106fc:	e59f002c 	ldr	r0, [pc, #44]	; 10730 <md+0xb8>
   10700:	ebffff6a 	bl	104b0 <print_uart0>
   10704:	e51b3008 	ldr	r3, [fp, #-8]
   10708:	e2833001 	add	r3, r3, #1
   1070c:	e50b3008 	str	r3, [fp, #-8]
   10710:	e51b3008 	ldr	r3, [fp, #-8]
   10714:	e3530009 	cmp	r3, #9
   10718:	daffffdf 	ble	1069c <md+0x24>
   1071c:	e24bd004 	sub	sp, fp, #4
   10720:	e8bd8800 	pop	{fp, pc}
   10724:	0001ffcc 	andeq	pc, r1, ip, asr #31
   10728:	0001ffd0 	ldrdeq	pc, [r1], -r0
   1072c:	0001ffd4 	ldrdeq	pc, [r1], -r4
   10730:	0001ffc8 	andeq	pc, r1, r8, asr #31

00010734 <atag_next_header>:
   10734:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10738:	e28db000 	add	fp, sp, #0
   1073c:	e24dd00c 	sub	sp, sp, #12
   10740:	e50b0008 	str	r0, [fp, #-8]
   10744:	e51b3008 	ldr	r3, [fp, #-8]
   10748:	e5933000 	ldr	r3, [r3]
   1074c:	e1a03103 	lsl	r3, r3, #2
   10750:	e51b2008 	ldr	r2, [fp, #-8]
   10754:	e0823003 	add	r3, r2, r3
   10758:	e1a00003 	mov	r0, r3
   1075c:	e24bd000 	sub	sp, fp, #0
   10760:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10764:	e12fff1e 	bx	lr

00010768 <argparse_process>:
   10768:	e92d4800 	push	{fp, lr}
   1076c:	e28db004 	add	fp, sp, #4
   10770:	e24dd010 	sub	sp, sp, #16
   10774:	e50b0010 	str	r0, [fp, #-16]
   10778:	e51b3010 	ldr	r3, [fp, #-16]
   1077c:	e50b3008 	str	r3, [fp, #-8]
   10780:	ea000016 	b	107e0 <argparse_process+0x78>
   10784:	e51b2008 	ldr	r2, [fp, #-8]
   10788:	e51b3010 	ldr	r3, [fp, #-16]
   1078c:	e0632002 	rsb	r2, r3, r2
   10790:	e51b3008 	ldr	r3, [fp, #-8]
   10794:	e5933004 	ldr	r3, [r3, #4]
   10798:	e59f0058 	ldr	r0, [pc, #88]	; 107f8 <argparse_process+0x90>
   1079c:	e1a01002 	mov	r1, r2
   107a0:	e1a02003 	mov	r2, r3
   107a4:	eb000384 	bl	115bc <os_printf>
   107a8:	e51b0008 	ldr	r0, [fp, #-8]
   107ac:	eb000013 	bl	10800 <atag_print>
   107b0:	e51b3008 	ldr	r3, [fp, #-8]
   107b4:	e5932004 	ldr	r2, [r3, #4]
   107b8:	e59f303c 	ldr	r3, [pc, #60]	; 107fc <argparse_process+0x94>
   107bc:	e1520003 	cmp	r2, r3
   107c0:	1a000003 	bne	107d4 <argparse_process+0x6c>
   107c4:	e51b3008 	ldr	r3, [fp, #-8]
   107c8:	e2833008 	add	r3, r3, #8
   107cc:	e1a00003 	mov	r0, r3
   107d0:	eb000041 	bl	108dc <argparse_parse>
   107d4:	e51b0008 	ldr	r0, [fp, #-8]
   107d8:	ebffffd5 	bl	10734 <atag_next_header>
   107dc:	e50b0008 	str	r0, [fp, #-8]
   107e0:	e51b3008 	ldr	r3, [fp, #-8]
   107e4:	e5933004 	ldr	r3, [r3, #4]
   107e8:	e3530000 	cmp	r3, #0
   107ec:	1affffe4 	bne	10784 <argparse_process+0x1c>
   107f0:	e24bd004 	sub	sp, fp, #4
   107f4:	e8bd8800 	pop	{fp, pc}
   107f8:	0001ffd8 	ldrdeq	pc, [r1], -r8
   107fc:	54410009 	strbpl	r0, [r1], #-9

00010800 <atag_print>:
   10800:	e92d4800 	push	{fp, lr}
   10804:	e28db004 	add	fp, sp, #4
   10808:	e24dd008 	sub	sp, sp, #8
   1080c:	e50b0008 	str	r0, [fp, #-8]
   10810:	e51b3008 	ldr	r3, [fp, #-8]
   10814:	e5933004 	ldr	r3, [r3, #4]
   10818:	e59f20a0 	ldr	r2, [pc, #160]	; 108c0 <atag_print+0xc0>
   1081c:	e1530002 	cmp	r3, r2
   10820:	0a000015 	beq	1087c <atag_print+0x7c>
   10824:	e59f2098 	ldr	r2, [pc, #152]	; 108c4 <atag_print+0xc4>
   10828:	e1530002 	cmp	r3, r2
   1082c:	0a00001b 	beq	108a0 <atag_print+0xa0>
   10830:	e59f2090 	ldr	r2, [pc, #144]	; 108c8 <atag_print+0xc8>
   10834:	e1530002 	cmp	r3, r2
   10838:	1a00001e 	bne	108b8 <atag_print+0xb8>
   1083c:	e51b3008 	ldr	r3, [fp, #-8]
   10840:	e5933000 	ldr	r3, [r3]
   10844:	e3530002 	cmp	r3, #2
   10848:	1a000002 	bne	10858 <atag_print+0x58>
   1084c:	e59f0078 	ldr	r0, [pc, #120]	; 108cc <atag_print+0xcc>
   10850:	eb000359 	bl	115bc <os_printf>
   10854:	ea000017 	b	108b8 <atag_print+0xb8>
   10858:	e51b3008 	ldr	r3, [fp, #-8]
   1085c:	e5931008 	ldr	r1, [r3, #8]
   10860:	e51b3008 	ldr	r3, [fp, #-8]
   10864:	e593200c 	ldr	r2, [r3, #12]
   10868:	e51b3008 	ldr	r3, [fp, #-8]
   1086c:	e5933010 	ldr	r3, [r3, #16]
   10870:	e59f0058 	ldr	r0, [pc, #88]	; 108d0 <atag_print+0xd0>
   10874:	eb000350 	bl	115bc <os_printf>
   10878:	ea00000e 	b	108b8 <atag_print+0xb8>
   1087c:	e51b3008 	ldr	r3, [fp, #-8]
   10880:	e5932008 	ldr	r2, [r3, #8]
   10884:	e51b3008 	ldr	r3, [fp, #-8]
   10888:	e593300c 	ldr	r3, [r3, #12]
   1088c:	e59f0040 	ldr	r0, [pc, #64]	; 108d4 <atag_print+0xd4>
   10890:	e1a01002 	mov	r1, r2
   10894:	e1a02003 	mov	r2, r3
   10898:	eb000347 	bl	115bc <os_printf>
   1089c:	ea000005 	b	108b8 <atag_print+0xb8>
   108a0:	e51b3008 	ldr	r3, [fp, #-8]
   108a4:	e2833008 	add	r3, r3, #8
   108a8:	e59f0028 	ldr	r0, [pc, #40]	; 108d8 <atag_print+0xd8>
   108ac:	e1a01003 	mov	r1, r3
   108b0:	eb000341 	bl	115bc <os_printf>
   108b4:	e1a00000 	nop			; (mov r0, r0)
   108b8:	e24bd004 	sub	sp, fp, #4
   108bc:	e8bd8800 	pop	{fp, pc}
   108c0:	54410002 	strbpl	r0, [r1], #-2
   108c4:	54410009 	strbpl	r0, [r1], #-9
   108c8:	54410001 	strbpl	r0, [r1], #-1
   108cc:	0001ffe8 	andeq	pc, r1, r8, ror #31
   108d0:	0001fff4 	strdeq	pc, [r1], -r4
   108d4:	00020024 	andeq	r0, r2, r4, lsr #32
   108d8:	00020044 	andeq	r0, r2, r4, asr #32

000108dc <argparse_parse>:
   108dc:	e92d4800 	push	{fp, lr}
   108e0:	e28db004 	add	fp, sp, #4
   108e4:	e24dd028 	sub	sp, sp, #40	; 0x28
   108e8:	e50b0028 	str	r0, [fp, #-40]	; 0x28
   108ec:	e51b0028 	ldr	r0, [fp, #-40]	; 0x28
   108f0:	e59f1138 	ldr	r1, [pc, #312]	; 10a30 <argparse_parse+0x154>
   108f4:	eb0004f9 	bl	11ce0 <os_strtok>
   108f8:	e50b0008 	str	r0, [fp, #-8]
   108fc:	ea000046 	b	10a1c <argparse_parse+0x140>
   10900:	e59f012c 	ldr	r0, [pc, #300]	; 10a34 <argparse_parse+0x158>
   10904:	e51b1008 	ldr	r1, [fp, #-8]
   10908:	eb00032b 	bl	115bc <os_printf>
   1090c:	e59f0124 	ldr	r0, [pc, #292]	; 10a38 <argparse_parse+0x15c>
   10910:	e51b1008 	ldr	r1, [fp, #-8]
   10914:	eb0000f3 	bl	10ce8 <os_strcmp>
   10918:	e1a03000 	mov	r3, r0
   1091c:	e3530000 	cmp	r3, #0
   10920:	1a000021 	bne	109ac <argparse_parse+0xd0>
   10924:	e3a00000 	mov	r0, #0
   10928:	e59f1100 	ldr	r1, [pc, #256]	; 10a30 <argparse_parse+0x154>
   1092c:	eb0004eb 	bl	11ce0 <os_strtok>
   10930:	e50b000c 	str	r0, [fp, #-12]
   10934:	e3a00000 	mov	r0, #0
   10938:	e59f10f0 	ldr	r1, [pc, #240]	; 10a30 <argparse_parse+0x154>
   1093c:	eb0004e7 	bl	11ce0 <os_strtok>
   10940:	e1a03000 	mov	r3, r0
   10944:	e1a00003 	mov	r0, r3
   10948:	e3a01010 	mov	r1, #16
   1094c:	eb000042 	bl	10a5c <string_to_unsigned_int>
   10950:	e1a03000 	mov	r3, r0
   10954:	e50b3010 	str	r3, [fp, #-16]
   10958:	e3a00000 	mov	r0, #0
   1095c:	e59f10cc 	ldr	r1, [pc, #204]	; 10a30 <argparse_parse+0x154>
   10960:	eb0004de 	bl	11ce0 <os_strtok>
   10964:	e1a03000 	mov	r3, r0
   10968:	e1a00003 	mov	r0, r3
   1096c:	e3a01010 	mov	r1, #16
   10970:	eb000039 	bl	10a5c <string_to_unsigned_int>
   10974:	e1a03000 	mov	r3, r0
   10978:	e50b3014 	str	r3, [fp, #-20]
   1097c:	e59f00b8 	ldr	r0, [pc, #184]	; 10a3c <argparse_parse+0x160>
   10980:	e51b100c 	ldr	r1, [fp, #-12]
   10984:	e51b2010 	ldr	r2, [fp, #-16]
   10988:	e51b3014 	ldr	r3, [fp, #-20]
   1098c:	eb00030a 	bl	115bc <os_printf>
   10990:	e51b3010 	ldr	r3, [fp, #-16]
   10994:	e1a00003 	mov	r0, r3
   10998:	eb0008d2 	bl	12ce8 <process_create>
   1099c:	e50b0018 	str	r0, [fp, #-24]
   109a0:	e51b0018 	ldr	r0, [fp, #-24]
   109a4:	eb000b02 	bl	135b4 <execute_process>
   109a8:	ea000017 	b	10a0c <argparse_parse+0x130>
   109ac:	e59f008c 	ldr	r0, [pc, #140]	; 10a40 <argparse_parse+0x164>
   109b0:	e51b1008 	ldr	r1, [fp, #-8]
   109b4:	eb0000cb 	bl	10ce8 <os_strcmp>
   109b8:	e1a03000 	mov	r3, r0
   109bc:	e3530000 	cmp	r3, #0
   109c0:	1a000011 	bne	10a0c <argparse_parse+0x130>
   109c4:	e59f0078 	ldr	r0, [pc, #120]	; 10a44 <argparse_parse+0x168>
   109c8:	eb0002fb 	bl	115bc <os_printf>
   109cc:	e59f0074 	ldr	r0, [pc, #116]	; 10a48 <argparse_parse+0x16c>
   109d0:	eb0002f9 	bl	115bc <os_printf>
   109d4:	e59f0070 	ldr	r0, [pc, #112]	; 10a4c <argparse_parse+0x170>
   109d8:	e59f1070 	ldr	r1, [pc, #112]	; 10a50 <argparse_parse+0x174>
   109dc:	eb0012d1 	bl	15528 <create_test>
   109e0:	e1a03000 	mov	r3, r0
   109e4:	e50b3020 	str	r3, [fp, #-32]
   109e8:	e59f0064 	ldr	r0, [pc, #100]	; 10a54 <argparse_parse+0x178>
   109ec:	e59f1064 	ldr	r1, [pc, #100]	; 10a58 <argparse_parse+0x17c>
   109f0:	eb0012cc 	bl	15528 <create_test>
   109f4:	e1a03000 	mov	r3, r0
   109f8:	e50b301c 	str	r3, [fp, #-28]
   109fc:	e24b3020 	sub	r3, fp, #32
   10a00:	e1a00003 	mov	r0, r3
   10a04:	e3a01002 	mov	r1, #2
   10a08:	eb001297 	bl	1546c <run_tests>
   10a0c:	e3a00000 	mov	r0, #0
   10a10:	e59f1018 	ldr	r1, [pc, #24]	; 10a30 <argparse_parse+0x154>
   10a14:	eb0004b1 	bl	11ce0 <os_strtok>
   10a18:	e50b0008 	str	r0, [fp, #-8]
   10a1c:	e51b3008 	ldr	r3, [fp, #-8]
   10a20:	e3530000 	cmp	r3, #0
   10a24:	1affffb5 	bne	10900 <argparse_parse+0x24>
   10a28:	e24bd004 	sub	sp, fp, #4
   10a2c:	e8bd8800 	pop	{fp, pc}
   10a30:	00020058 	andeq	r0, r2, r8, asr r0
   10a34:	0002005c 	andeq	r0, r2, ip, asr r0
   10a38:	00020068 	andeq	r0, r2, r8, rrx
   10a3c:	00020070 	andeq	r0, r2, r0, ror r0
   10a40:	000200a8 	andeq	r0, r2, r8, lsr #1
   10a44:	000200b0 	strheq	r0, [r2], -r0	; <UNPREDICTABLE>
   10a48:	000200c0 	andeq	r0, r2, r0, asr #1
   10a4c:	000200d4 	ldrdeq	r0, [r2], -r4
   10a50:	00015570 	andeq	r5, r1, r0, ror r5
   10a54:	000200e0 	andeq	r0, r2, r0, ror #1
   10a58:	0001558c 	andeq	r5, r1, ip, lsl #11

00010a5c <string_to_unsigned_int>:
   10a5c:	e92d4800 	push	{fp, lr}
   10a60:	e28db004 	add	fp, sp, #4
   10a64:	e24dd018 	sub	sp, sp, #24
   10a68:	e50b0018 	str	r0, [fp, #-24]
   10a6c:	e50b101c 	str	r1, [fp, #-28]
   10a70:	e51b0018 	ldr	r0, [fp, #-24]
   10a74:	eb00045e 	bl	11bf4 <os_strlen>
   10a78:	e1a03000 	mov	r3, r0
   10a7c:	e2433001 	sub	r3, r3, #1
   10a80:	e50b3008 	str	r3, [fp, #-8]
   10a84:	e51b3008 	ldr	r3, [fp, #-8]
   10a88:	e51b2018 	ldr	r2, [fp, #-24]
   10a8c:	e0823003 	add	r3, r2, r3
   10a90:	e5d33000 	ldrb	r3, [r3]
   10a94:	e1a00003 	mov	r0, r3
   10a98:	eb000029 	bl	10b44 <hex_value_of_character>
   10a9c:	e1a03000 	mov	r3, r0
   10aa0:	e3730001 	cmn	r3, #1
   10aa4:	1a000001 	bne	10ab0 <string_to_unsigned_int+0x54>
   10aa8:	e3e03000 	mvn	r3, #0
   10aac:	ea000021 	b	10b38 <string_to_unsigned_int+0xdc>
   10ab0:	e3a03000 	mov	r3, #0
   10ab4:	e50b300c 	str	r3, [fp, #-12]
   10ab8:	e3a03000 	mov	r3, #0
   10abc:	e50b3010 	str	r3, [fp, #-16]
   10ac0:	ea000018 	b	10b28 <string_to_unsigned_int+0xcc>
   10ac4:	e51b3008 	ldr	r3, [fp, #-8]
   10ac8:	e51b2018 	ldr	r2, [fp, #-24]
   10acc:	e0823003 	add	r3, r2, r3
   10ad0:	e5d33000 	ldrb	r3, [r3]
   10ad4:	e1a00003 	mov	r0, r3
   10ad8:	eb000019 	bl	10b44 <hex_value_of_character>
   10adc:	e50b0014 	str	r0, [fp, #-20]
   10ae0:	e51b3014 	ldr	r3, [fp, #-20]
   10ae4:	e3730001 	cmn	r3, #1
   10ae8:	1a000001 	bne	10af4 <string_to_unsigned_int+0x98>
   10aec:	e51b3010 	ldr	r3, [fp, #-16]
   10af0:	ea000010 	b	10b38 <string_to_unsigned_int+0xdc>
   10af4:	e51b300c 	ldr	r3, [fp, #-12]
   10af8:	e1a03103 	lsl	r3, r3, #2
   10afc:	e51b2014 	ldr	r2, [fp, #-20]
   10b00:	e1a03312 	lsl	r3, r2, r3
   10b04:	e51b2010 	ldr	r2, [fp, #-16]
   10b08:	e1823003 	orr	r3, r2, r3
   10b0c:	e50b3010 	str	r3, [fp, #-16]
   10b10:	e51b3008 	ldr	r3, [fp, #-8]
   10b14:	e2433001 	sub	r3, r3, #1
   10b18:	e50b3008 	str	r3, [fp, #-8]
   10b1c:	e51b300c 	ldr	r3, [fp, #-12]
   10b20:	e2833001 	add	r3, r3, #1
   10b24:	e50b300c 	str	r3, [fp, #-12]
   10b28:	e51b3008 	ldr	r3, [fp, #-8]
   10b2c:	e3530000 	cmp	r3, #0
   10b30:	aaffffe3 	bge	10ac4 <string_to_unsigned_int+0x68>
   10b34:	e51b3010 	ldr	r3, [fp, #-16]
   10b38:	e1a00003 	mov	r0, r3
   10b3c:	e24bd004 	sub	sp, fp, #4
   10b40:	e8bd8800 	pop	{fp, pc}

00010b44 <hex_value_of_character>:
   10b44:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10b48:	e28db000 	add	fp, sp, #0
   10b4c:	e24dd00c 	sub	sp, sp, #12
   10b50:	e1a03000 	mov	r3, r0
   10b54:	e54b3005 	strb	r3, [fp, #-5]
   10b58:	e55b3005 	ldrb	r3, [fp, #-5]
   10b5c:	e353002f 	cmp	r3, #47	; 0x2f
   10b60:	9a000005 	bls	10b7c <hex_value_of_character+0x38>
   10b64:	e55b3005 	ldrb	r3, [fp, #-5]
   10b68:	e3530039 	cmp	r3, #57	; 0x39
   10b6c:	8a000002 	bhi	10b7c <hex_value_of_character+0x38>
   10b70:	e55b3005 	ldrb	r3, [fp, #-5]
   10b74:	e2433030 	sub	r3, r3, #48	; 0x30
   10b78:	ea000012 	b	10bc8 <hex_value_of_character+0x84>
   10b7c:	e55b3005 	ldrb	r3, [fp, #-5]
   10b80:	e3530040 	cmp	r3, #64	; 0x40
   10b84:	9a000005 	bls	10ba0 <hex_value_of_character+0x5c>
   10b88:	e55b3005 	ldrb	r3, [fp, #-5]
   10b8c:	e3530046 	cmp	r3, #70	; 0x46
   10b90:	8a000002 	bhi	10ba0 <hex_value_of_character+0x5c>
   10b94:	e55b3005 	ldrb	r3, [fp, #-5]
   10b98:	e2433037 	sub	r3, r3, #55	; 0x37
   10b9c:	ea000009 	b	10bc8 <hex_value_of_character+0x84>
   10ba0:	e55b3005 	ldrb	r3, [fp, #-5]
   10ba4:	e3530060 	cmp	r3, #96	; 0x60
   10ba8:	9a000005 	bls	10bc4 <hex_value_of_character+0x80>
   10bac:	e55b3005 	ldrb	r3, [fp, #-5]
   10bb0:	e3530066 	cmp	r3, #102	; 0x66
   10bb4:	8a000002 	bhi	10bc4 <hex_value_of_character+0x80>
   10bb8:	e55b3005 	ldrb	r3, [fp, #-5]
   10bbc:	e2433057 	sub	r3, r3, #87	; 0x57
   10bc0:	ea000000 	b	10bc8 <hex_value_of_character+0x84>
   10bc4:	e3e03000 	mvn	r3, #0
   10bc8:	e1a00003 	mov	r0, r3
   10bcc:	e24bd000 	sub	sp, fp, #0
   10bd0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10bd4:	e12fff1e 	bx	lr

00010bd8 <panic>:
   10bd8:	e92d4800 	push	{fp, lr}
   10bdc:	e28db004 	add	fp, sp, #4
   10be0:	e59f0008 	ldr	r0, [pc, #8]	; 10bf0 <panic+0x18>
   10be4:	eb000274 	bl	115bc <os_printf>
   10be8:	e320f003 	wfi
   10bec:	e8bd8800 	pop	{fp, pc}
   10bf0:	000200ec 	andeq	r0, r2, ip, ror #1

00010bf4 <_assert_fail>:
   10bf4:	e92d4800 	push	{fp, lr}
   10bf8:	e28db004 	add	fp, sp, #4
   10bfc:	e24dd010 	sub	sp, sp, #16
   10c00:	e50b0008 	str	r0, [fp, #-8]
   10c04:	e50b100c 	str	r1, [fp, #-12]
   10c08:	e50b2010 	str	r2, [fp, #-16]
   10c0c:	e59f0020 	ldr	r0, [pc, #32]	; 10c34 <_assert_fail+0x40>
   10c10:	e51b1008 	ldr	r1, [fp, #-8]
   10c14:	e51b200c 	ldr	r2, [fp, #-12]
   10c18:	e51b3010 	ldr	r3, [fp, #-16]
   10c1c:	eb000266 	bl	115bc <os_printf>
   10c20:	ebffffec 	bl	10bd8 <panic>
   10c24:	e3a03001 	mov	r3, #1
   10c28:	e1a00003 	mov	r0, r3
   10c2c:	e24bd004 	sub	sp, fp, #4
   10c30:	e8bd8800 	pop	{fp, pc}
   10c34:	000200fc 	strdeq	r0, [r2], -ip

00010c38 <os_memcmp>:
   10c38:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10c3c:	e28db000 	add	fp, sp, #0
   10c40:	e24dd01c 	sub	sp, sp, #28
   10c44:	e50b0010 	str	r0, [fp, #-16]
   10c48:	e50b1014 	str	r1, [fp, #-20]
   10c4c:	e50b2018 	str	r2, [fp, #-24]
   10c50:	e51b3010 	ldr	r3, [fp, #-16]
   10c54:	e50b3008 	str	r3, [fp, #-8]
   10c58:	e51b3014 	ldr	r3, [fp, #-20]
   10c5c:	e50b300c 	str	r3, [fp, #-12]
   10c60:	ea000008 	b	10c88 <os_memcmp+0x50>
   10c64:	e51b3018 	ldr	r3, [fp, #-24]
   10c68:	e2433001 	sub	r3, r3, #1
   10c6c:	e50b3018 	str	r3, [fp, #-24]
   10c70:	e51b3008 	ldr	r3, [fp, #-8]
   10c74:	e2833001 	add	r3, r3, #1
   10c78:	e50b3008 	str	r3, [fp, #-8]
   10c7c:	e51b300c 	ldr	r3, [fp, #-12]
   10c80:	e2833001 	add	r3, r3, #1
   10c84:	e50b300c 	str	r3, [fp, #-12]
   10c88:	e51b3018 	ldr	r3, [fp, #-24]
   10c8c:	e3530000 	cmp	r3, #0
   10c90:	0a000005 	beq	10cac <os_memcmp+0x74>
   10c94:	e51b3008 	ldr	r3, [fp, #-8]
   10c98:	e5d32000 	ldrb	r2, [r3]
   10c9c:	e51b300c 	ldr	r3, [fp, #-12]
   10ca0:	e5d33000 	ldrb	r3, [r3]
   10ca4:	e1520003 	cmp	r2, r3
   10ca8:	0affffed 	beq	10c64 <os_memcmp+0x2c>
   10cac:	e51b3018 	ldr	r3, [fp, #-24]
   10cb0:	e3530000 	cmp	r3, #0
   10cb4:	0a000006 	beq	10cd4 <os_memcmp+0x9c>
   10cb8:	e51b3008 	ldr	r3, [fp, #-8]
   10cbc:	e5d33000 	ldrb	r3, [r3]
   10cc0:	e1a02003 	mov	r2, r3
   10cc4:	e51b300c 	ldr	r3, [fp, #-12]
   10cc8:	e5d33000 	ldrb	r3, [r3]
   10ccc:	e0633002 	rsb	r3, r3, r2
   10cd0:	ea000000 	b	10cd8 <os_memcmp+0xa0>
   10cd4:	e3a03000 	mov	r3, #0
   10cd8:	e1a00003 	mov	r0, r3
   10cdc:	e24bd000 	sub	sp, fp, #0
   10ce0:	e49db004 	pop	{fp}		; (ldr fp, [sp], #4)
   10ce4:	e12fff1e 	bx	lr

00010ce8 <os_strcmp>:
   10ce8:	e52db004 	push	{fp}		; (str fp, [sp, #-4]!)
   10cec:	e28db000 	add	fp, sp, #0
   10cf0:	e24dd00c 	sub	sp, sp, #12
   10cf4:	e50b0008 	str	r0, [fp, #-8]
   10cf8:	e50b100c 	str	r1, [fp, #-12]
   10cfc:	ea000005 	b	10d18 <os_strcmp+0x30>
   10d00:	e51b3008 	ldr	r3, [fp, #-8]
   10d04:	e2833001 	add	r3, r3, #1
   10d08:	e50b3008 	str	r3, [fp, #-8]
   10d0c:	e51b300c 	ldr	r3, [fp, #-12]
   10d10:	e2833001 	add	r3, r3, #1
   10d14:	e50b300c 	str	r3, [fp, #-12]
   10d18:	e51b3008 	ldr	r3, [fp, #-8]
   10d1c:	e5d32000 	ldrb	r2, [r3]
   10d20:	e51b300c 	ldr	r3, [fp, #-12]
   10d24:	e5d33000 	ldrb	r3, [r3]
   10d28:	e1520003 	cmp	r2, r3
   10d2c:	1a000003 	bne	10d40 <os_strcmp+0x58>
   10d30:	e51b3008 	ldr	r3, [fp, #-8]
   10d34:	e5d33000 	ldrb	r3, [r3]
   10d38:	e3530000 	cmp	r3, #0
   10d3c:	1affffef 	b